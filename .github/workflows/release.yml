name: Create PDF Release

on:
  workflow_dispatch:
    inputs:
      send_to_telegram:
        description: 'Send PDF to Telegram?'
        required: true
        type: boolean
        default: false
      include_phone:
        description: 'Include phone number in PDF?'
        required: true
        type: boolean
        default: false
      use_custom_email:
        description: 'Use custom email instead of default emails?'
        required: true
        type: boolean
        default: false
      custom_email:
        description: 'Custom email to generate resume for'
        required: false
        type: string
        default: ''

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r scripts/requirements.txt

      - name: Setup Typst
        uses: typst-community/setup-typst@v4.1.0

      - name: Get current date
        id: date
        run: |
          echo "tag_date=$(date +'%Y.%m.%d')" >> $GITHUB_OUTPUT
          echo "file_date=$(date +'%B_%Y' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Build PDFs for all emails
        env:
          RESUME_EMAILS: ${{ vars.RESUME_EMAILS }}
          RESUME_PHONE: ${{ vars.PHONE }}
          TELEGRAM_BOT_TOKEN: ${{ vars.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ vars.TELEGRAM_CHAT_ID }}
        run: |
          if [ "${{ github.event.inputs.use_custom_email }}" == "true" ]; then
            if [ -n "${{ github.event.inputs.custom_email }}" ]; then
              CUSTOM_EMAIL="${{ github.event.inputs.custom_email }}"
            else
              CUSTOM_EMAIL="$RESUME_EMAILS"
            fi
            if [ "${{ github.event.inputs.include_phone }}" == "true" ] && [ -n "$RESUME_PHONE" ]; then
              python3 scripts/generate_resumes.py -e "${CUSTOM_EMAIL}" -p "${RESUME_PHONE}" ${{ github.event.inputs.send_to_telegram && '-t' || '' }}
            else
              python3 scripts/generate_resumes.py -e "${CUSTOM_EMAIL}" ${{ github.event.inputs.send_to_telegram && '-t' || '' }}
            fi
          else
            if [ "${{ github.event.inputs.include_phone }}" == "true" ] && [ -n "$RESUME_PHONE" ]; then
              if [ -n "$RESUME_EMAILS" ]; then
                python3 scripts/generate_resumes.py -e "${RESUME_EMAILS}" -p "${RESUME_PHONE}" ${{ github.event.inputs.send_to_telegram && '-t' || '' }}
              else
                python3 scripts/generate_resumes.py -p "${RESUME_PHONE}" ${{ github.event.inputs.send_to_telegram && '-t' || '' }}
              fi
            else
              if [ -n "$RESUME_EMAILS" ]; then
                python3 scripts/generate_resumes.py -e "${RESUME_EMAILS}" ${{ github.event.inputs.send_to_telegram && '-t' || '' }}
              else
                python3 scripts/generate_resumes.py ${{ github.event.inputs.send_to_telegram && '-t' || '' }}
              fi
            fi
          fi

      - name: Upload all generated PDFs as artifact
        uses: actions/upload-artifact@v4
        with:
          name: resume-pdfs-${{ steps.date.outputs.tag_date }}
          path: dist/*.pdf
          retention-days: 30

      - name: Create Release
        if: github.event.inputs.send_to_telegram == false
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*.pdf
          tag_name: v${{ steps.date.outputs.tag_date }}
          name: v${{ steps.date.outputs.tag_date }}
          draft: false
          prerelease: false
